package FML.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AtomicShape = 0;
  public static final int Attribute = 1;
  public static final int Canvas = 2;
  public static final int ComplexShape = 3;
  public static final int Shape = 4;
  public static final int ShapeReference = 5;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xa92a6e05bbaf47feL, 0x8d9a530de3a9cd83L);
    builder.put(0x7e31924bbfe01a96L, AtomicShape);
    builder.put(0x7e31924bbfe03bfbL, Attribute);
    builder.put(0x7e31924bbfe01a8dL, Canvas);
    builder.put(0x7e31924bbfe01a9cL, ComplexShape);
    builder.put(0x7e31924bbfe01a8eL, Shape);
    builder.put(0x7e31924bbfe041dbL, ShapeReference);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
